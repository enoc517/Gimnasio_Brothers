@model Gimnasio_Brothers.Models.CategoriaProducto

@{
    ViewData["Title"] = "Eliminar";
}

<h1>Eliminar</h1>
<br>
<h3>¿Esta seguro de eliminar esta Categoria?</h3>
<br>
<div>
    <h4>Categoria de Producto</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Nombre)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Nombre)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Descripcion)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Descripcion)
        </dd>
    </dl>
    <br>
    <form asp-action="Delete" id="formulario">
        <input type="hidden" asp-for="IdcategoriaProducto" />
        <input type="button" id="btnDeleteJs" value="Eliminar" class="btn btn-danger" /> |
        <a asp-action="Index" class="btn btn-warning"><i class="bi bi-arrow-return-left"> Regresar a Categoria Productos</i></a>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        async function fetchData() {

            const dataform = new FormData(document.querySelector('#formulario'));
            const response = await fetch('/CategoriaProductos/DeleteConJs',
                {
                    method: 'DELETE',
                    body: dataform
                });
            const result = await response.json();
            return result;
        }

        async function deleteCategoriaProducto() {

            try {
                var response = await fetchData();
                if (response.result) {
                    console.log(response.result);
                    Swal.fire({
                        title: "El registro fue borrado exitosamente!",
                        icon: "info",
                        timer: 2000,
                        timerProgressBar: false,
                        didOpen: () => {
                            Swal.showLoading();
                            timerInterval = setInterval(() => {
                            }, 100);
                        },
                        willClose: () => {
                            clearInterval(timerInterval);
                        }
                    }).then((result) => {
                        window.location.href = '@Url.Action("Index", "CategoriaProductos")'
                    });

                } else {
                    Swal.fire({
                        position: 'top-end',
                        icon: 'error',
                        title: response.mensaje,
                        showConfirmButton: false,
                        timer: 1500
                    });
                }
            } catch (error) {
                console.log(error);
            }

        }
        document.addEventListener("DOMContentLoaded", () => {
            document.querySelector("#btnDeleteJs").addEventListener('click', () => {
                Swal.fire({
                    title: "Está seguro de eliminar el registor?",
                    text: "Tome en cuenta que es un proceso irreversible",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Si, borrar!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        deleteCategoriaProducto();
                    }
                });
            })
        });
    </script>

} 